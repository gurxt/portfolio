/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\paper.glb --transform
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { MathUtils } from 'three'
import { useFrame } from '@react-three/fiber'

export function Paper({ setPage }) {
  const { nodes, materials } = useGLTF('/paper-transformed.glb')
  const ref = useRef()
  const [hovered, setHovered] = useState(false)
  const [delta, setDelta] = useState(0.005)

  useFrame(() => {
    if (hovered) {
      if (ref.current.position.y > 0.466 - 150) setDelta(-0.005)
      if (ref.current.position.y < 0.133 - 150) setDelta(+0.005)
      ref.current.position.y += delta
    } else {
      ref.current.position.y = MathUtils.lerp(ref.current.position.y, 0.122 - 150, 0.025)
    }
  })

  return (
    <group 
      dispose={null}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      onClick={() => setPage("resume")}
    >
      <mesh ref={ref} geometry={nodes.Plane015.geometry} material={materials['paper.002']} position={[2.34, 0.122 - 150, 2.797]} rotation={[Math.PI, -0.467, Math.PI]} scale={[10.456, 0.104, 10.456]} />
    </group>
  )
}

useGLTF.preload('/paper-transformed.glb')
