/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\person.glb --transform
*/

import { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { MathUtils } from 'three'
import { useFrame } from '@react-three/fiber'

export function Person({ setPage }) {
  const { nodes, materials } = useGLTF('/person-transformed.glb')
  const ref = useRef()
  const [hovered, setHovered] = useState(false)
  const [delta, setDelta] = useState(0.005)

  useFrame(() => {
    if (hovered) {
      if (ref.current.position.y > 0.333 - 150) setDelta(-0.005)
      if (ref.current.position.y < 0.071 - 150) setDelta(+0.005)
      ref.current.position.y += delta
    } else {
      ref.current.position.y = MathUtils.lerp(ref.current.position.y, 0.063 - 150, 0.025)
    }
  })

  return (
    <group 
      dispose={null}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      onClick={() => setPage("about")}
    >
     <group ref={ref} position={[1.799, 0.063 - 150, -2.312]} rotation={[0, 0.972, 0]} scale={0.026}>
        <mesh geometry={nodes.Mesh707.geometry} material={materials['Black Metallic']} />
        <mesh geometry={nodes.Mesh707_1.geometry} material={materials.Copper} />
        <mesh geometry={nodes.Mesh707_2.geometry} material={materials['3Dsoul_kuba_006.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/person-transformed.glb')
