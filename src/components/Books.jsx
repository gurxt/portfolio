/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 .\public\books.glb --transform
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { MathUtils } from 'three'

export function Books({ setPage }) {
  const { nodes, materials } = useGLTF('/books-transformed.glb')
  const ref = useRef()
  const [hovered, setHovered] = useState(false)
  const [delta, setDelta] = useState(0.005)

  useFrame(() => {
    if (hovered) {
      if (ref.current.position.y > 2.011 - 150) setDelta(-0.005)
      if (ref.current.position.y < 1.774 - 150) setDelta(+0.005)
      ref.current.position.y += delta
    } else {
      ref.current.position.y = MathUtils.lerp(ref.current.position.y, 1.774 - 150, 0.025)
    }
  })

  return (
    <group 
      dispose={null}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      onClick={() => setPage("courses")}
    >
      <group ref={ref} position={[-3.346, 1.774 - 150, 3.554]} rotation={[-1.589, 0.164, -1.458]} scale={13.704}>
        <mesh geometry={nodes.Cube007.geometry} material={materials.RealtaAumentata} />
        <mesh geometry={nodes.Cube007_1.geometry} material={materials.paper} />
        <mesh geometry={nodes.Cube007_2.geometry} material={materials.Stampa3D} />
        <mesh geometry={nodes.Cube007_3.geometry} material={materials.SemioticaDesign} />
        <mesh geometry={nodes.Cube007_4.geometry} material={materials.CorporateImage} />
        <mesh geometry={nodes.Cube007_5.geometry} material={materials.SelfBrand} />
        <mesh geometry={nodes.Cube007_6.geometry} material={materials.FreeGraphic} />
        <mesh geometry={nodes.Cube007_7.geometry} material={materials.ImmagineImpresa} />
        <mesh geometry={nodes.Cube007_8.geometry} material={materials.LightingRendering} />
      </group>
    </group>
  )
}

useGLTF.preload('/books-transformed.glb')
